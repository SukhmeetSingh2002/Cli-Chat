name: Build Binary Release

on:
    push:
        tags:
            - v*

jobs:
    build:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest]
                python-version: [3.8]
        steps:
            - name: Checkout Code
              uses: actions/checkout@v2
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python-version }}
            - name: Install Dependencies and Build Binary
              run: |
                  cd client
                  pip install --upgrade pip
                  pip install -r requirements.txt
                  pyinstaller --onefile client-cli.py
            # rename binary if using windows
            - name: Rename Binary Windows
              if: matrix.os == 'windows-latest'
              run: |
                echo "Hello ${{ matrix.os }}!"
                cd client
                cd dist
                ls
                ren client-cli.exe client-cli-${{ matrix.os }}.exe
                ls
            # rename binary if using ubuntu
            - name: Rename Binary Ubuntu
              if: matrix.os == 'ubuntu-latest'
              run: |
                echo "Hello ${{ matrix.os }}!"
                cd client
                cd dist
                ls -laR
                mv client-cli client-cli-${{ matrix.os }}
                ls -laR
          
            # upload binary to artifacts
            - name: Upload Binary
              uses: actions/upload-artifact@v3
              with:
                  name: Build
                  path: client/dist/client-cli-${{ matrix.os }}*

    create_release:
      name: Create Release
      needs: build
      runs-on: ubuntu-latest
      steps:
        - name: Download 
          uses: actions/download-artifact@v3
          with:
            name: Build
            path: build
        - name: Zip files
          run: |
            ls
            zip -r build.zip build/
        - name: Create Release
          id: create_release
          uses: ncipollo/release-action@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            artifacts: "build.zip"
            tag: ${{ github.ref_name }}
            body: |
              Release ${{ github.ref_name }}
            draft: false
            prerelease: false
                    
            