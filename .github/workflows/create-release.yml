name: Build Binary Release

on:
    push:
        tags:
            - v*

jobs:
    build:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest]
                python-version: [3.8]
        steps:
            - name: Checkout Code
              uses: actions/checkout@v2
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python-version }}
            - name: Install Dependencies and Build Binary
              run: |
                  cd client
                  pip install --upgrade pip
                  pip install -r requirements.txt
                  pyinstaller --onefile client-cli.py
            # rename binary if using windows
            - name: Rename Binary Windows
              if: matrix.os == 'windows-latest'
              run: |
                echo "Hello ${{ matrix.os }}!"
                cd client
                cd dist
                ls -laR
                ren client-cli.exe client-cli-${{ matrix.os }}.exe
                ls -laR
            # rename binary if using ubuntu
            - name: Rename Binary Ubuntu
              if: matrix.os == 'ubuntu-latest'
              run: |
                echo "Hello ${{ matrix.os }}!"
                cd client
                cd dist
                ls -laR
                mv client-cli client-cli-${{ matrix.os }}
                ls -laR
          
            # upload binary to artifacts
            - name: Upload Binary
              uses: actions/upload-artifact@v3
              with:
                  name: client-cli-${{ matrix.os }}
                  path: client/dist/client-cli-${{ matrix.os }}

            # upload binary to github release
            - name: Create Release
              id: create_release
              uses: softprops/action-gh-release@v1
              if: startsWith(github.ref, 'refs/tags/v')
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  files: |
                      ls -laR
                      client-cli-${{ matrix.os }}
                  tag_name: ${{ github.ref }}
                  body: |
                      Release ${{ github.ref }}
                  draft: false
                  prerelease: false
                  
          